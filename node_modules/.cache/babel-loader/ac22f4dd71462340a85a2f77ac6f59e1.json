{"ast":null,"code":"import _slicedToArray from \"/Users/cate/projects/lad-study-react/weather-widget/weatherwidget/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cate/projects/lad-study-react/weather-widget/weatherwidget/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport InputCity from './components/inputCity/inputCity';\nimport Widget from \"./components/widget/widget\";\nimport axios from \"axios\";\n\nfunction App(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        cities = _useState2[0],\n        setCities = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  function onButtonPress(props) {\n    setLoading(true);\n    axios.get('https://cors-anywhere.herokuapp.com/http://openweathermap.org/data/2.5/weather?q=' + props + '&appid=b6907d289e10d714a6e88b30761fae22').then(response => {\n      // setLoading(false),\n      setCities(cities => [...cities, response.data]);\n    }); // })\n  } // function autocomplete(props) {\n  //     axios.get(\n  //         'https://cors-anywhere.herokuapp.com/http://openweathermap.org/data/2.5/weather?q='+props+'&appid=b6907d289e10d714a6e88b30761fae22').then((response) => {\n  //         setCities(cities => [...cities, response.data]);\n  //     });\n  // }\n\n\n  function deleteCities(cityId) {\n    setCities(cities.filter(city => city.id !== cityId));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(InputCity, {\n    onButtonPress: onButtonPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), loading ? 'thinking' : '', React.createElement(\"div\", {\n    className: \"widgets_wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, cities.map(el => React.createElement(Widget, {\n    name: el.name,\n    key: el.id,\n    cityId: el.id,\n    temp: el.main.temp,\n    weather: el.weather[0].description,\n    icon: el.weather[0].icon,\n    deleteCities: deleteCities,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cate/projects/lad-study-react/weather-widget/weatherwidget/src/App.js"],"names":["React","useState","InputCity","Widget","axios","App","props","cities","setCities","loading","setLoading","onButtonPress","get","then","response","data","deleteCities","cityId","filter","city","id","map","el","name","main","temp","weather","description","icon"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA,oBACUL,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,QACXM,MADW;AAAA,QACHC,SADG;;AAAA,qBAEYP,QAAQ,CAAC,KAAD,CAFpB;AAAA;AAAA,QAEXQ,OAFW;AAAA,QAEFC,UAFE;;AAIlB,WAASC,aAAT,CAAuBL,KAAvB,EAA8B;AAC1BI,IAAAA,UAAU,CAAC,IAAD,CAAV;AACIN,IAAAA,KAAK,CAACQ,GAAN,CACA,sFAAoFN,KAApF,GAA0F,yCAD1F,EACqIO,IADrI,CAC2IC,QAAD,IAAc;AACpJ;AACIN,MAAAA,SAAS,CAACD,MAAM,IAAI,CAAC,GAAGA,MAAJ,EAAYO,QAAQ,CAACC,IAArB,CAAX,CAAT;AACX,KAJG,EAFsB,CAO9B;AACC,GAZiB,CAclB;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAC1BT,IAAAA,SAAS,CAACD,MAAM,CAACW,MAAP,CAAeC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYH,MAApC,CAAD,CAAT;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAY,IAAA,aAAa,EAAEN,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKF,OAAO,GAAG,UAAH,GAAgB,EAF5B,EAGI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,MAAM,CAACc,GAAP,CAAYC,EAAD,IAAQ,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEA,EAAE,CAACC,IAAjB;AAAuB,IAAA,GAAG,EAAED,EAAE,CAACF,EAA/B;AAAmC,IAAA,MAAM,EAAEE,EAAE,CAACF,EAA9C;AAAkD,IAAA,IAAI,EAAEE,EAAE,CAACE,IAAH,CAAQC,IAAhE;AAAsE,IAAA,OAAO,EAAEH,EAAE,CAACI,OAAH,CAAW,CAAX,EAAcC,WAA7F;AAA0G,IAAA,IAAI,EAAEL,EAAE,CAACI,OAAH,CAAW,CAAX,EAAcE,IAA9H;AAAoI,IAAA,YAAY,EAAEZ,YAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,CADJ,CAHJ,CADJ;AAUD;;AAED,eAAeX,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport InputCity from './components/inputCity/inputCity';\nimport Widget from \"./components/widget/widget\";\nimport axios from \"axios\";\n\n\nfunction App(props) {\n  const [cities, setCities] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  function onButtonPress(props) {\n      setLoading(true);\n          axios.get(\n          'https://cors-anywhere.herokuapp.com/http://openweathermap.org/data/2.5/weather?q='+props+'&appid=b6907d289e10d714a6e88b30761fae22').then((response) => {\n              // setLoading(false),\n                  setCities(cities => [...cities, response.data]);\n      });\n  // })\n  }\n\n  // function autocomplete(props) {\n  //     axios.get(\n  //         'https://cors-anywhere.herokuapp.com/http://openweathermap.org/data/2.5/weather?q='+props+'&appid=b6907d289e10d714a6e88b30761fae22').then((response) => {\n  //         setCities(cities => [...cities, response.data]);\n  //     });\n  // }\n\n  function deleteCities(cityId) {\n      setCities(cities.filter((city) => city.id !== cityId));\n  }\n\n  return (\n      <div className='wrapper'>\n          <InputCity  onButtonPress={onButtonPress} />\n          {loading ? 'thinking' : ''}\n          <div className='widgets_wrapper'>{\n              cities.map((el) => <Widget name={el.name} key={el.id} cityId={el.id} temp={el.main.temp} weather={el.weather[0].description} icon={el.weather[0].icon} deleteCities={deleteCities} />)\n            }\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}